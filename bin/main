import pygame

pygame.init()
pygame.display.set_caption("Мини-Лабиринты")
up_image = pygame.image.load('звездалёт_up.png')
down_image = pygame.image.load('звездалёт_down.png')
left_image = pygame.image.load('звездалёт_left.png')
right_image = pygame.image.load('звездалёт_right.png')
fon = pygame.image.load('fon.png')
fon2 = pygame.image.load('fon2.png')
fon3 = pygame.image.load('fon3.jpeg')
final_fon = pygame.image.load('final_fon.jpeg')


def walls_generator(screen, walls):
    for wall in walls:
        pygame.draw.rect(screen, (72, 61, 139), wall)


def main_game():
    pygame.init()
    game = pygame.display.set_mode((1000, 500))
    levels_walls = [[(100, 0, 10, 300), # 1
                     (400, 100, 10, 200),
                     (400, 100, 200, 10),
                     (400, 300, 200, 10),
                     (600, 100, 10, 200),
                     (900, 100, 10, 300),
                     (0, 400, 900, 10)],
                    [(0, 100, 900, 10), # 2
                     (100, 200, 700, 10),
                     (0, 300, 450, 10),
                     (550, 300, 450, 10),
                     (0, 400, 900, 10)],
                    [(100, 100, 600, 10),  # 3
                     (100, 100, 10, 200),
                     (700, 100, 10, 200),
                     (200, 200, 600, 10),
                     (900, 300, 100, 10),
                     (200, 300, 600, 10),
                     (200, 300, 10, 100),
                     (0, 400, 900, 10)],
                    [(100, 100, 900, 10),  # 4
                     (200, 100, 10, 200),
                     (200, 100, 200, 10),
                     (500, 100, 400, 10),
                     (900, 100, 10, 100),
                     (200, 200, 500, 10),
                     (700, 200, 200, 10),
                     (700, 200, 200, 10),
                     (800, 300, 100, 10),
                     (0, 400, 900, 10)],
                    [(200, 0, 10, 300),  # 5
                     (400, 200, 10, 200),
                     (400, 300, 400, 10),
                     (500, 100, 500, 10),
                     (500, 200, 300, 10),
                     (800, 200, 300, 10),
                     (0, 400, 900, 10)],
                    [(200, 0, 10, 300),  # 6
                     (400, 100, 10, 200),
                     (400, 100, 300, 10),
                     (700, 100, 10, 300),
                     (800, 100, 10, 200),
                     (800, 300, 100, 10),
                     (900, 100, 10, 200),
                     (0, 400, 900, 10)],
                    [(0, 100, 500, 10),  # 7
                     (500, 100, 10, 100),
                     (100, 300, 800, 10),
                     (100, 200, 400, 10),
                     (600, 100, 400, 10),
                     (600, 200, 300, 10),
                     (900, 200, 10, 100),
                     (0, 400, 900, 10)],
                    [(300, 100, 700, 10),  # 8
                     (700, 100, 10, 100),
                     (200, 200, 500, 10),
                     (100, 200, 10, 100),
                     (100, 300, 400, 10),
                     (600, 300, 300, 10),
                     (900, 100, 10, 200),
                     (0, 400, 900, 10)],
                    [(100, 0, 10, 100),  # 9
                     (100, 100, 200, 10),
                     (400, 100, 500, 10),
                     (100, 200, 400, 10),
                     (500, 200, 10, 100),
                     (600, 200, 300, 10),
                     (100, 300, 300, 10),
                     (500, 300, 300, 10),
                     (900, 100, 10, 300),
                     (100, 100, 10, 200),
                     (0, 400, 900, 10)],
                    [(50, 50, 100, 10),  # 10
                     (50, 50, 10, 100),
                     (50, 150, 200, 10),
                     (250, 50, 10, 100),
                     (150, 150, 10, 100),
                     (50, 250, 10, 150),
                     (100, 300, 350, 10),
                     (100, 350, 150, 10),
                     (250, 350, 10, 50),
                     (50, 250, 100, 10),
                     (250, 250, 100, 10),
                     (350, 0, 10, 300),
                     (350, 100, 250, 10),
                     (350, 300, 100, 10),
                     (450, 150, 10, 150),
                     (500, 150, 10, 150),
                     (500, 300, 200, 10),
                     (600, 100, 10, 150),
                     (800, 100, 100, 10),
                     (800, 200, 100, 10),
                     (800, 300, 50, 10),
                     (850, 150, 150, 10),
                     (900, 200, 200, 10),
                     (700, 300, 10, 100),
                     (600, 250, 400, 10),
                     (0, 400, 900, 10)]]

    x = 10
    y = 10
    widht = 57
    height = 22
    speed = 10
    level = 1
    up = False
    down = False
    left = False
    right = False
    lvl1_music = 1
    lvl4_music = 1
    lvl7_music = 1
    lvl_10_music = 1
    run = True

    while run:
        pygame.time.delay(50)
        pushed_buttons = pygame.key.get_pressed()

        if pushed_buttons[pygame.K_UP] and y > 5:
            y -= speed
            up = True
            down = False
            left = False
            right = False

        if pushed_buttons[pygame.K_DOWN] and y < 495 - height:
            y += speed
            up = False
            down = True
            left = False
            right = False

        if pushed_buttons[pygame.K_LEFT] and x > 5:
            x -= speed
            up = False
            down = False
            left = True
            right = False

        if pushed_buttons[pygame.K_RIGHT] and x < 995 - widht:
            x += speed
            up = False
            down = False
            left = False
            right = True
        if x >= 900 and y >= 350:
            level += 1
            x = 10
            y = 10
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                run = False

        if level == 1:
           game.blit(fon, (0, 0))
           walls_generator(game, levels_walls[0])
           if lvl1_music == 1:
                pygame.mixer.music.load('fon_music2.mp3')
                pygame.mixer.music.play()
           lvl1_music += 1

        if level == 2:
           game.blit(fon, (0, 0))
           walls_generator(game, levels_walls[1])

        if level == 3:
           game.blit(fon, (0, 0))
           walls_generator(game, levels_walls[2])


        if level == 4:
            game.blit(fon2, (0, 0))
            walls_generator(game, levels_walls[3])
            if lvl4_music == 1:
                pygame.mixer.music.unload()
                pygame.mixer.music.load('fon_music.mp3')
                pygame.mixer.music.play(-1)
            lvl4_music += 1

        if level == 5:
           game.blit(fon2, (0, 0))
           walls_generator(game, levels_walls[4])

        if level == 6:
           game.blit(fon2, (0, 0))
           walls_generator(game, levels_walls[5])

        if level == 7:
            game.blit(fon3, (0, 0))
            walls_generator(game, levels_walls[6])
            if lvl7_music == 1:
                pygame.mixer.music.unload()
                pygame.mixer.music.load('win_music.mp3')
                pygame.mixer.music.play(-1)
            lvl7_music += 1

        if level == 8:
           game.blit(fon3, (0, 0))
           walls_generator(game, levels_walls[7])

        if level == 9:
           game.blit(fon3, (0, 0))
           walls_generator(game, levels_walls[8])

        if level == 10:
            game.blit(final_fon, (0, 0))
            walls_generator(game, levels_walls[9])
            if lvl_10_music == 1:
                pygame.mixer.music.unload()
                pygame.mixer.music.load('final_music.mp3')
                pygame.mixer.music.play(-1)
                lvl_10_music += 1

        if level == 11:
            run = False
            pygame.mixer.music.unload()
            pygame.mixer.music.load('win_music.mp3')
            pygame.mixer.music.play()
            start_screen()


        exit_font = pygame.font.Font(None, 40)
        exit_text = exit_font.render("ВЫЙТИ", True, (165, 42, 42), (210, 105, 30))
        game.blit(exit_text, (5, 450))
        if event.type == pygame.MOUSEBUTTONDOWN:
            if pygame.mouse.get_pos() >= (5, 350) and pygame.mouse.get_pos() <= (170, 400):
                pygame.mixer.music.pause()
                start_screen()

        if up:
            game.blit(up_image, (x, y))
        elif down:
            game.blit(down_image, (x, y))
        elif left:
            game.blit(left_image, (x, y))
        else:
            game.blit(right_image, (x, y))
        pygame.display.update()
        pygame.display.flip()



def start_screen():
    pygame.init()
    start_screen = pygame.display.set_mode((500,400))
    pygame.display.set_caption("Мини-Лабиринты")
    play_font = pygame.font.Font(None, 50)
    play_text = play_font.render("ИГРАТЬ", True, (0, 0, 139), (95, 158, 160))
    start_screen.blit(play_text, (180, 150))
    exit_font = pygame.font.Font(None, 40)
    exit_text = exit_font.render("ВЫЙТИ", True, (165, 42, 42), (210, 105, 30))
    start_screen.blit(exit_text, (5, 350))
    pygame.display.flip()

    first_screen = True
    while first_screen:
        for event in pygame.event.get():
            if event.type == pygame.MOUSEBUTTONDOWN:
                if pygame.mouse.get_pos() >= (180, 300) and pygame.mouse.get_pos() <= (320, 400):
                    main_game()
                if pygame.mouse.get_pos() >= (5, 350) and pygame.mouse.get_pos() <= (170, 400):
                    pygame.quit()

start_screen()
pygame.quit()

